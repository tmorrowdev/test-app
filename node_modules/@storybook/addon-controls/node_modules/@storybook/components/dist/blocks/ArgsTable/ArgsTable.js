"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.from");

require("core-js/modules/es.array.is-array");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.entries");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgsTable = exports.ArgsTableError = exports.TableWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _theming = require("@storybook/theming");

var _polished = require("polished");

var _ArgRow = require("./ArgRow");

var _SectionRow = require("./SectionRow");

var _EmptyBlock = require("../EmptyBlock");

var _DocumentFormatting = require("../../typography/DocumentFormatting");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TableWrapper = _theming.styled.table(function (_ref) {
  var _trFirstChild$conca, _trLastChild$concat, _;

  var theme = _ref.theme,
      compact = _ref.compact;
  return {
    '&&': (_ = {
      // Resets for cascading/system styles
      borderCollapse: 'collapse',
      borderSpacing: 0,
      color: theme.color.defaultText,
      tr: {
        border: 'none',
        background: 'none'
      },
      'td, th': {
        padding: 0,
        border: 'none',
        verticalAlign: 'top'
      },
      // End Resets
      fontSize: theme.typography.size.s2,
      lineHeight: '20px',
      textAlign: 'left',
      width: '100%',
      // Margin collapse
      marginTop: 25,
      marginBottom: 40,
      'th:first-of-type, td:first-of-type': {
        paddingLeft: 20
      },
      'th:last-of-type, td:last-of-type': Object.assign({
        paddingRight: 20
      }, compact ? null : {
        width: '20%'
      }),
      th: {
        color: theme.base === 'light' ? (0, _polished.transparentize)(0.25, theme.color.defaultText) : (0, _polished.transparentize)(0.45, theme.color.defaultText),
        paddingTop: 10,
        paddingBottom: 10,
        '&:not(:first-of-type)': {
          paddingLeft: 15,
          paddingRight: 15
        }
      },
      td: {
        paddingTop: '16px',
        paddingBottom: '16px',
        '&:not(:first-of-type)': {
          paddingLeft: 15,
          paddingRight: 15
        },
        '&:last-of-type': {
          paddingRight: 20
        }
      },
      // Table "block" styling
      // Emphasize tbody's background and set borderRadius
      // Calling out because styling tables is finicky
      // Makes border alignment consistent w/other DocBlocks
      marginLeft: 1,
      marginRight: 1
    }, _defineProperty(_, "tr:first-child".concat(_theming.ignoreSsrWarning), (_trFirstChild$conca = {}, _defineProperty(_trFirstChild$conca, "td:first-child".concat(_theming.ignoreSsrWarning, ", th:first-child").concat(_theming.ignoreSsrWarning), {
      borderTopLeftRadius: theme.appBorderRadius
    }), _defineProperty(_trFirstChild$conca, "td:last-child".concat(_theming.ignoreSsrWarning, ", th:last-child").concat(_theming.ignoreSsrWarning), {
      borderTopRightRadius: theme.appBorderRadius
    }), _trFirstChild$conca)), _defineProperty(_, "tr:last-child".concat(_theming.ignoreSsrWarning), (_trLastChild$concat = {}, _defineProperty(_trLastChild$concat, "td:first-child".concat(_theming.ignoreSsrWarning, ", th:first-child").concat(_theming.ignoreSsrWarning), {
      borderBottomLeftRadius: theme.appBorderRadius
    }), _defineProperty(_trLastChild$concat, "td:last-child".concat(_theming.ignoreSsrWarning, ", th:last-child").concat(_theming.ignoreSsrWarning), {
      borderBottomRightRadius: theme.appBorderRadius
    }), _trLastChild$concat)), _defineProperty(_, "tbody", {
      // slightly different than the other DocBlock shadows to account for table styling gymnastics
      boxShadow: theme.base === 'light' ? "rgba(0, 0, 0, 0.10) 0 1px 3px 1px,\n          ".concat((0, _polished.transparentize)(0.035, theme.appBorderColor), " 0 0 0 1px") : "rgba(0, 0, 0, 0.20) 0 2px 5px 1px,\n          ".concat((0, _polished.opacify)(0.05, theme.appBorderColor), " 0 0 0 1px"),
      borderRadius: theme.appBorderRadius,
      tr: _defineProperty({
        background: 'transparent',
        overflow: 'hidden'
      }, "&:not(:first-child".concat(_theming.ignoreSsrWarning, ")"), {
        borderTopWidth: 1,
        borderTopStyle: 'solid',
        borderTopColor: theme.base === 'light' ? (0, _polished.darken)(0.1, theme.background.content) : (0, _polished.lighten)(0.05, theme.background.content)
      }),
      td: {
        background: theme.background.content
      }
    }), _)
  };
});

exports.TableWrapper = TableWrapper;
var ArgsTableError;
exports.ArgsTableError = ArgsTableError;

(function (ArgsTableError) {
  ArgsTableError["NO_COMPONENT"] = "No component found";
  ArgsTableError["ARGS_UNSUPPORTED"] = "Args unsupported. See Args documentation for your framework.";
})(ArgsTableError || (exports.ArgsTableError = ArgsTableError = {}));

var ArgsTableRow = function ArgsTableRow(props) {
  var _ref2 = props,
      section = _ref2.section,
      updateArgs = _ref2.updateArgs;

  if (section) {
    return /*#__PURE__*/_react["default"].createElement(_SectionRow.SectionRow, {
      section: section,
      updateArgs: updateArgs
    });
  }

  var _ref3 = props,
      row = _ref3.row,
      arg = _ref3.arg,
      compact = _ref3.compact;
  return /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
    row: row,
    arg: arg,
    updateArgs: updateArgs,
    compact: compact
  });
};

ArgsTableRow.displayName = "ArgsTableRow";

var _ref12 = /*#__PURE__*/_react["default"].createElement(_EmptyBlock.EmptyBlock, null, "No props found for this component");

var _ref13 = /*#__PURE__*/_react["default"].createElement("th", null, "Name");

var _ref14 = /*#__PURE__*/_react["default"].createElement("th", null, "Description");

var _ref15 = /*#__PURE__*/_react["default"].createElement("th", null, "Default");

var _ref16 = /*#__PURE__*/_react["default"].createElement("th", null, "Control");

/**
 * Display the props for a component as a props table. Each row is a collection of
 * ArgDefs, usually derived from docgen info for the component.
 */
var ArgsTable = function ArgsTable(props) {
  var _ref4 = props,
      error = _ref4.error;

  if (error) {
    return /*#__PURE__*/_react["default"].createElement(_EmptyBlock.EmptyBlock, null, error);
  }

  var _ref5 = props,
      rows = _ref5.rows,
      args = _ref5.args,
      updateArgs = _ref5.updateArgs,
      compact = _ref5.compact;
  var ungroupedRows = {};
  var categoryRows = {};

  if (rows) {
    Object.entries(rows).forEach(function (_ref6) {
      var _ref7 = _slicedToArray(_ref6, 2),
          key = _ref7[0],
          row = _ref7[1];

      var _row$table = row.table;
      _row$table = _row$table === void 0 ? {} : _row$table;
      var _row$table$category = _row$table.category,
          category = _row$table$category === void 0 ? null : _row$table$category;

      if (category) {
        if (!categoryRows[category]) categoryRows[category] = {};
        categoryRows[category][key] = row;
      } else {
        ungroupedRows[key] = row;
      }
    });
  }

  var allRows = [];
  Object.entries(ungroupedRows).forEach(function (_ref8) {
    var _ref9 = _slicedToArray(_ref8, 2),
        key = _ref9[0],
        row = _ref9[1];

    var arg = args && args[key];
    allRows.push({
      key: key,
      value: {
        row: row,
        arg: arg,
        updateArgs: updateArgs
      }
    });
  });
  Object.keys(categoryRows).forEach(function (category) {
    var catRows = categoryRows[category];

    if (Object.keys(catRows).length > 0) {
      allRows.push({
        key: category,
        value: {
          section: category,
          updateArgs: updateArgs
        }
      });
      Object.entries(catRows).forEach(function (_ref10) {
        var _ref11 = _slicedToArray(_ref10, 2),
            key = _ref11[0],
            row = _ref11[1];

        var arg = args && args[key];
        allRows.push({
          key: "".concat(category, "_").concat(key),
          value: {
            row: row,
            arg: arg,
            updateArgs: updateArgs
          }
        });
      });
    }
  });

  if (allRows.length === 0) {
    return _ref12;
  }

  return /*#__PURE__*/_react["default"].createElement(_DocumentFormatting.ResetWrapper, null, /*#__PURE__*/_react["default"].createElement(TableWrapper, {
    compact: compact,
    className: "docblock-propstable"
  }, /*#__PURE__*/_react["default"].createElement("thead", {
    className: "docblock-propstable-head"
  }, /*#__PURE__*/_react["default"].createElement("tr", null, _ref13, compact ? null : _ref14, compact ? null : _ref15, updateArgs ? _ref16 : null)), /*#__PURE__*/_react["default"].createElement("tbody", {
    className: "docblock-propstable-body"
  }, allRows.map(function (row) {
    return /*#__PURE__*/_react["default"].createElement(ArgsTableRow, _extends({
      compact: compact,
      key: row.key
    }, row.value));
  }))));
};

exports.ArgsTable = ArgsTable;
ArgsTable.displayName = "ArgsTable";