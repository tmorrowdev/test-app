"use strict";

require("core-js/modules/es.object.assign");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArgsCompact = exports.Args = exports.StringCompact = exports.Markdown = exports.Func = exports.ComplexObject = exports.ArrayOf = exports.ObjectOf = exports.Number = exports.LongDesc = exports.LongName = exports.String = exports.markdownType = exports.funcType = exports.complexType = exports.arrayType = exports.objectType = exports.numberType = exports.longDescType = exports.longNameType = exports.stringType = exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonActions = require("@storybook/addon-actions");

var _ArgRow = require("./ArgRow");

var _ArgsTable = require("./ArgsTable");

var _DocumentFormatting = require("../../typography/DocumentFormatting");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = {
  component: _ArgRow.ArgRow,
  title: 'Docs/ArgRow',
  excludeStories: /.*Type$/,
  decorators: [function (getStory) {
    return /*#__PURE__*/_react["default"].createElement(_DocumentFormatting.ResetWrapper, null, /*#__PURE__*/_react["default"].createElement(_ArgsTable.TableWrapper, null, /*#__PURE__*/_react["default"].createElement("tbody", null, getStory())));
  }]
};
exports["default"] = _default;
var stringType = {
  name: 'someString',
  description: 'someString description',
  type: {
    required: true
  },
  control: {
    type: 'text'
  },
  table: {
    type: {
      summary: 'string'
    },
    defaultValue: {
      summary: 'fixme'
    }
  }
};
exports.stringType = stringType;
var longNameType = Object.assign(Object.assign({}, stringType), {}, {
  name: 'reallyLongStringThatTakesUpSpace'
});
exports.longNameType = longNameType;
var longDescType = Object.assign(Object.assign({}, stringType), {}, {
  description: 'really long description that takes up a lot of space. sometimes this happens.'
});
exports.longDescType = longDescType;
var numberType = {
  name: 'someNumber',
  description: 'someNumber description',
  type: {
    required: false
  },
  table: {
    type: {
      summary: 'number'
    },
    defaultValue: {
      summary: '0'
    }
  }
};
exports.numberType = numberType;
var objectType = {
  name: 'someObject',
  description: 'A simple `objectOf` propType.',
  table: {
    type: {
      summary: 'objectOf(number)'
    },
    defaultValue: {
      summary: '{ key: 1 }'
    }
  }
};
exports.objectType = objectType;
var arrayType = {
  name: 'someArray',
  description: 'array of a certain type',
  table: {
    type: {
      summary: 'number[]'
    },
    defaultValue: {
      summary: '[1, 2, 3]'
    }
  }
};
exports.arrayType = arrayType;
var complexType = {
  name: 'someComplex',
  description: 'A very complex `objectOf` propType.',
  table: {
    type: {
      summary: 'object',
      detail: "[{\n    id: number,\n    func: func,\n    arr: [{ index: number }]\n  }]"
    },
    defaultValue: {
      summary: 'object',
      detail: "[{\n    id: 1,\n    func: () => {},\n    arr: [{ index: 1 }]\n  }]"
    }
  }
};
exports.complexType = complexType;
var funcType = {
  name: 'concat',
  description: 'concat 2 string values.',
  type: {
    required: true
  },
  table: {
    type: {
      summary: '(a: string, b: string) => string'
    },
    defaultValue: {
      summary: 'func',
      detail: '(a, b) => { return a + b; }'
    },
    jsDocTags: {
      params: [{
        name: 'a',
        description: 'The first string'
      }, {
        name: 'b',
        description: 'The second string'
      }],
      returns: {
        description: 'The concatenation of both strings'
      }
    }
  }
};
exports.funcType = funcType;
var markdownType = {
  name: 'someString',
  description: 'A `prop` can *support* __markdown__ syntax. This was ship in ~~5.2~~ 5.3. [Find more info in the storybook docs.](https://storybook.js.org/)',
  table: {
    type: {
      summary: 'string'
    }
  }
};
exports.markdownType = markdownType;
var withArgs = {
  arg: 'string value',
  updateArgs: (0, _addonActions.action)('updateArgs')
};

var _ref = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: stringType
});

var String = function String() {
  return _ref;
};

exports.String = String;
String.displayName = "String";

var _ref2 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: longNameType
});

var LongName = function LongName() {
  return _ref2;
};

exports.LongName = LongName;
LongName.displayName = "LongName";

var _ref3 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: longDescType
});

var LongDesc = function LongDesc() {
  return _ref3;
};

exports.LongDesc = LongDesc;
LongDesc.displayName = "LongDesc";

var _ref4 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: numberType
});

var Number = function Number() {
  return _ref4;
};

exports.Number = Number;
Number.displayName = "Number";

var _ref5 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: objectType
});

var ObjectOf = function ObjectOf() {
  return _ref5;
};

exports.ObjectOf = ObjectOf;
ObjectOf.displayName = "ObjectOf";

var _ref6 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: arrayType
});

var ArrayOf = function ArrayOf() {
  return _ref6;
};

exports.ArrayOf = ArrayOf;
ArrayOf.displayName = "ArrayOf";

var _ref7 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: complexType
});

var ComplexObject = function ComplexObject() {
  return _ref7;
};

exports.ComplexObject = ComplexObject;
ComplexObject.displayName = "ComplexObject";

var _ref8 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: funcType
});

var Func = function Func() {
  return _ref8;
};

exports.Func = Func;
Func.displayName = "Func";

var _ref9 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  row: markdownType
});

var Markdown = function Markdown() {
  return _ref9;
};

exports.Markdown = Markdown;
Markdown.displayName = "Markdown";

var _ref10 = /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, {
  compact: true,
  row: stringType
});

var StringCompact = function StringCompact() {
  return _ref10;
};

exports.StringCompact = StringCompact;
StringCompact.displayName = "StringCompact";

var Args = function Args() {
  return /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, _extends({
    row: stringType
  }, withArgs));
};

exports.Args = Args;
Args.displayName = "Args";

var ArgsCompact = function ArgsCompact() {
  return /*#__PURE__*/_react["default"].createElement(_ArgRow.ArgRow, _extends({
    compact: true,
    row: stringType
  }, withArgs));
};

exports.ArgsCompact = ArgsCompact;
ArgsCompact.displayName = "ArgsCompact";