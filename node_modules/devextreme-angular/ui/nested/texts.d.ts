/*!
 * devextreme-angular
 * Version: 20.1.4
 * Build date: Tue Jun 02 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoTextsComponent extends NestedOption implements OnDestroy, OnInit {
    fix: string;
    leftPosition: string;
    rightPosition: string;
    unfix: string;
    addRow: string;
    cancelAllChanges: string;
    cancelRowChanges: string;
    confirmDeleteMessage: string;
    confirmDeleteTitle: string;
    deleteRow: string;
    editRow: string;
    saveAllChanges: string;
    saveRowChanges: string;
    undeleteRow: string;
    validationCancelChanges: string;
    exportAll: string;
    exportSelectedRows: string;
    exportTo: string;
    clearFilter: string;
    createFilter: string;
    filterEnabledHint: string;
    groupByThisColumn: string;
    groupContinuedMessage: string;
    groupContinuesMessage: string;
    ungroup: string;
    ungroupAll: string;
    cancel: string;
    emptyValue: string;
    ok: string;
    avg: string;
    avgOtherColumn: string;
    count: string;
    max: string;
    maxOtherColumn: string;
    min: string;
    minOtherColumn: string;
    sum: string;
    sumOtherColumn: string;
    allFields: string;
    columnFields: string;
    dataFields: string;
    filterFields: string;
    rowFields: string;
    columnFieldArea: string;
    dataFieldArea: string;
    filterFieldArea: string;
    rowFieldArea: string;
    collapseAll: string;
    dataNotAvailable: string;
    expandAll: string;
    exportToExcel: string;
    grandTotal: string;
    noData: string;
    removeAllSorting: string;
    showFieldChooser: string;
    sortColumnBySummary: string;
    sortRowBySummary: string;
    total: string;
    addRowToNode: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoTextsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoTextsComponent, "dxo-texts", never, { "fix": "fix"; "leftPosition": "leftPosition"; "rightPosition": "rightPosition"; "unfix": "unfix"; "addRow": "addRow"; "cancelAllChanges": "cancelAllChanges"; "cancelRowChanges": "cancelRowChanges"; "confirmDeleteMessage": "confirmDeleteMessage"; "confirmDeleteTitle": "confirmDeleteTitle"; "deleteRow": "deleteRow"; "editRow": "editRow"; "saveAllChanges": "saveAllChanges"; "saveRowChanges": "saveRowChanges"; "undeleteRow": "undeleteRow"; "validationCancelChanges": "validationCancelChanges"; "exportAll": "exportAll"; "exportSelectedRows": "exportSelectedRows"; "exportTo": "exportTo"; "clearFilter": "clearFilter"; "createFilter": "createFilter"; "filterEnabledHint": "filterEnabledHint"; "groupByThisColumn": "groupByThisColumn"; "groupContinuedMessage": "groupContinuedMessage"; "groupContinuesMessage": "groupContinuesMessage"; "ungroup": "ungroup"; "ungroupAll": "ungroupAll"; "cancel": "cancel"; "emptyValue": "emptyValue"; "ok": "ok"; "avg": "avg"; "avgOtherColumn": "avgOtherColumn"; "count": "count"; "max": "max"; "maxOtherColumn": "maxOtherColumn"; "min": "min"; "minOtherColumn": "minOtherColumn"; "sum": "sum"; "sumOtherColumn": "sumOtherColumn"; "allFields": "allFields"; "columnFields": "columnFields"; "dataFields": "dataFields"; "filterFields": "filterFields"; "rowFields": "rowFields"; "columnFieldArea": "columnFieldArea"; "dataFieldArea": "dataFieldArea"; "filterFieldArea": "filterFieldArea"; "rowFieldArea": "rowFieldArea"; "collapseAll": "collapseAll"; "dataNotAvailable": "dataNotAvailable"; "expandAll": "expandAll"; "exportToExcel": "exportToExcel"; "grandTotal": "grandTotal"; "noData": "noData"; "removeAllSorting": "removeAllSorting"; "showFieldChooser": "showFieldChooser"; "sortColumnBySummary": "sortColumnBySummary"; "sortRowBySummary": "sortRowBySummary"; "total": "total"; "addRowToNode": "addRowToNode"; }, {}, never, never>;
}
export declare class DxoTextsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoTextsModule, [typeof DxoTextsComponent], never, [typeof DxoTextsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoTextsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHMuZC50cyIsInNvdXJjZXMiOlsidGV4dHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAyMC4xLjRcclxuICogQnVpbGQgZGF0ZTogVHVlIEp1biAwMiAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0IH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b1RleHRzQ29tcG9uZW50IGV4dGVuZHMgTmVzdGVkT3B0aW9uIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgZml4OiBzdHJpbmc7XHJcbiAgICBsZWZ0UG9zaXRpb246IHN0cmluZztcclxuICAgIHJpZ2h0UG9zaXRpb246IHN0cmluZztcclxuICAgIHVuZml4OiBzdHJpbmc7XHJcbiAgICBhZGRSb3c6IHN0cmluZztcclxuICAgIGNhbmNlbEFsbENoYW5nZXM6IHN0cmluZztcclxuICAgIGNhbmNlbFJvd0NoYW5nZXM6IHN0cmluZztcclxuICAgIGNvbmZpcm1EZWxldGVNZXNzYWdlOiBzdHJpbmc7XHJcbiAgICBjb25maXJtRGVsZXRlVGl0bGU6IHN0cmluZztcclxuICAgIGRlbGV0ZVJvdzogc3RyaW5nO1xyXG4gICAgZWRpdFJvdzogc3RyaW5nO1xyXG4gICAgc2F2ZUFsbENoYW5nZXM6IHN0cmluZztcclxuICAgIHNhdmVSb3dDaGFuZ2VzOiBzdHJpbmc7XHJcbiAgICB1bmRlbGV0ZVJvdzogc3RyaW5nO1xyXG4gICAgdmFsaWRhdGlvbkNhbmNlbENoYW5nZXM6IHN0cmluZztcclxuICAgIGV4cG9ydEFsbDogc3RyaW5nO1xyXG4gICAgZXhwb3J0U2VsZWN0ZWRSb3dzOiBzdHJpbmc7XHJcbiAgICBleHBvcnRUbzogc3RyaW5nO1xyXG4gICAgY2xlYXJGaWx0ZXI6IHN0cmluZztcclxuICAgIGNyZWF0ZUZpbHRlcjogc3RyaW5nO1xyXG4gICAgZmlsdGVyRW5hYmxlZEhpbnQ6IHN0cmluZztcclxuICAgIGdyb3VwQnlUaGlzQ29sdW1uOiBzdHJpbmc7XHJcbiAgICBncm91cENvbnRpbnVlZE1lc3NhZ2U6IHN0cmluZztcclxuICAgIGdyb3VwQ29udGludWVzTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgdW5ncm91cDogc3RyaW5nO1xyXG4gICAgdW5ncm91cEFsbDogc3RyaW5nO1xyXG4gICAgY2FuY2VsOiBzdHJpbmc7XHJcbiAgICBlbXB0eVZhbHVlOiBzdHJpbmc7XHJcbiAgICBvazogc3RyaW5nO1xyXG4gICAgYXZnOiBzdHJpbmc7XHJcbiAgICBhdmdPdGhlckNvbHVtbjogc3RyaW5nO1xyXG4gICAgY291bnQ6IHN0cmluZztcclxuICAgIG1heDogc3RyaW5nO1xyXG4gICAgbWF4T3RoZXJDb2x1bW46IHN0cmluZztcclxuICAgIG1pbjogc3RyaW5nO1xyXG4gICAgbWluT3RoZXJDb2x1bW46IHN0cmluZztcclxuICAgIHN1bTogc3RyaW5nO1xyXG4gICAgc3VtT3RoZXJDb2x1bW46IHN0cmluZztcclxuICAgIGFsbEZpZWxkczogc3RyaW5nO1xyXG4gICAgY29sdW1uRmllbGRzOiBzdHJpbmc7XHJcbiAgICBkYXRhRmllbGRzOiBzdHJpbmc7XHJcbiAgICBmaWx0ZXJGaWVsZHM6IHN0cmluZztcclxuICAgIHJvd0ZpZWxkczogc3RyaW5nO1xyXG4gICAgY29sdW1uRmllbGRBcmVhOiBzdHJpbmc7XHJcbiAgICBkYXRhRmllbGRBcmVhOiBzdHJpbmc7XHJcbiAgICBmaWx0ZXJGaWVsZEFyZWE6IHN0cmluZztcclxuICAgIHJvd0ZpZWxkQXJlYTogc3RyaW5nO1xyXG4gICAgY29sbGFwc2VBbGw6IHN0cmluZztcclxuICAgIGRhdGFOb3RBdmFpbGFibGU6IHN0cmluZztcclxuICAgIGV4cGFuZEFsbDogc3RyaW5nO1xyXG4gICAgZXhwb3J0VG9FeGNlbDogc3RyaW5nO1xyXG4gICAgZ3JhbmRUb3RhbDogc3RyaW5nO1xyXG4gICAgbm9EYXRhOiBzdHJpbmc7XHJcbiAgICByZW1vdmVBbGxTb3J0aW5nOiBzdHJpbmc7XHJcbiAgICBzaG93RmllbGRDaG9vc2VyOiBzdHJpbmc7XHJcbiAgICBzb3J0Q29sdW1uQnlTdW1tYXJ5OiBzdHJpbmc7XHJcbiAgICBzb3J0Um93QnlTdW1tYXJ5OiBzdHJpbmc7XHJcbiAgICB0b3RhbDogc3RyaW5nO1xyXG4gICAgYWRkUm93VG9Ob2RlOiBzdHJpbmc7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhvVGV4dHNNb2R1bGUge1xyXG59XHJcbiJdfQ==