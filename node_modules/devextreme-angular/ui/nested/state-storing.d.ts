/*!
 * devextreme-angular
 * Version: 20.1.4
 * Build date: Tue Jun 02 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoStateStoringComponent extends NestedOption implements OnDestroy, OnInit {
    customLoad: Function;
    customSave: Function;
    enabled: boolean;
    savingTimeout: number;
    storageKey: string;
    type: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoStateStoringComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoStateStoringComponent, "dxo-state-storing", never, { "customLoad": "customLoad"; "customSave": "customSave"; "enabled": "enabled"; "savingTimeout": "savingTimeout"; "storageKey": "storageKey"; "type": "type"; }, {}, never, never>;
}
export declare class DxoStateStoringModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoStateStoringModule, [typeof DxoStateStoringComponent], never, [typeof DxoStateStoringComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoStateStoringModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUtc3RvcmluZy5kLnRzIiwic291cmNlcyI6WyJzdGF0ZS1zdG9yaW5nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAyMC4xLjRcclxuICogQnVpbGQgZGF0ZTogVHVlIEp1biAwMiAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0IH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b1N0YXRlU3RvcmluZ0NvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcclxuICAgIGN1c3RvbUxvYWQ6IEZ1bmN0aW9uO1xyXG4gICAgY3VzdG9tU2F2ZTogRnVuY3Rpb247XHJcbiAgICBlbmFibGVkOiBib29sZWFuO1xyXG4gICAgc2F2aW5nVGltZW91dDogbnVtYmVyO1xyXG4gICAgc3RvcmFnZUtleTogc3RyaW5nO1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9vcHRpb25QYXRoOiBzdHJpbmc7XHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0KTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b1N0YXRlU3RvcmluZ01vZHVsZSB7XHJcbn1cclxuIl19