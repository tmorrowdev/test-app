/*!
 * devextreme-angular
 * Version: 20.1.4
 * Build date: Tue Jun 02 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxiValidationRuleComponent extends CollectionNestedOption {
    message: string;
    trim: boolean;
    type: string;
    ignoreEmptyValue: boolean;
    max: Date | number;
    min: Date | number;
    reevaluate: boolean;
    validationCallback: Function;
    comparisonTarget: Function;
    comparisonType: string;
    pattern: RegExp | string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxiValidationRuleComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxiValidationRuleComponent, "dxi-validation-rule", never, { "message": "message"; "trim": "trim"; "type": "type"; "ignoreEmptyValue": "ignoreEmptyValue"; "max": "max"; "min": "min"; "reevaluate": "reevaluate"; "validationCallback": "validationCallback"; "comparisonTarget": "comparisonTarget"; "comparisonType": "comparisonType"; "pattern": "pattern"; }, {}, never, never>;
}
export declare class DxiValidationRuleModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxiValidationRuleModule, [typeof DxiValidationRuleComponent], never, [typeof DxiValidationRuleComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxiValidationRuleModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGlvbi1ydWxlLWR4aS5kLnRzIiwic291cmNlcyI6WyJ2YWxpZGF0aW9uLXJ1bGUtZHhpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMjAuMS40XHJcbiAqIEJ1aWxkIGRhdGU6IFR1ZSBKdW4gMDIgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29sbGVjdGlvbk5lc3RlZE9wdGlvbiB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhpVmFsaWRhdGlvblJ1bGVDb21wb25lbnQgZXh0ZW5kcyBDb2xsZWN0aW9uTmVzdGVkT3B0aW9uIHtcclxuICAgIG1lc3NhZ2U6IHN0cmluZztcclxuICAgIHRyaW06IGJvb2xlYW47XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICBpZ25vcmVFbXB0eVZhbHVlOiBib29sZWFuO1xyXG4gICAgbWF4OiBEYXRlIHwgbnVtYmVyO1xyXG4gICAgbWluOiBEYXRlIHwgbnVtYmVyO1xyXG4gICAgcmVldmFsdWF0ZTogYm9vbGVhbjtcclxuICAgIHZhbGlkYXRpb25DYWxsYmFjazogRnVuY3Rpb247XHJcbiAgICBjb21wYXJpc29uVGFyZ2V0OiBGdW5jdGlvbjtcclxuICAgIGNvbXBhcmlzb25UeXBlOiBzdHJpbmc7XHJcbiAgICBwYXR0ZXJuOiBSZWdFeHAgfCBzdHJpbmc7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4aVZhbGlkYXRpb25SdWxlTW9kdWxlIHtcclxufVxyXG4iXX0=