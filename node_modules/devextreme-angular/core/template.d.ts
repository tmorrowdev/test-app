/*!
 * devextreme-angular
 * Version: 20.1.4
 * Build date: Tue Jun 02 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { TemplateRef, ViewContainerRef, Renderer2, NgZone } from '@angular/core';
import { DxTemplateHost } from './template-host';
import * as ɵngcc0 from '@angular/core';
export declare const DX_TEMPLATE_WRAPPER_CLASS = "dx-template-wrapper";
export declare class RenderData {
    model: any;
    index: number;
    container: any;
}
export declare class DxTemplateDirective {
    private templateRef;
    private viewContainerRef;
    private renderer;
    private zone;
    dxTemplateOf: any;
    name: string;
    constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef, templateHost: DxTemplateHost, renderer: Renderer2, zone: NgZone);
    private renderTemplate;
    render(renderData: RenderData): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DxTemplateDirective, "[dxTemplate]", never, { "dxTemplateOf": "dxTemplateOf"; }, {}, never>;
}
export declare class DxTemplateModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxTemplateModule, [typeof DxTemplateDirective], never, [typeof DxTemplateDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxTemplateModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuZC50cyIsInNvdXJjZXMiOlsidGVtcGxhdGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMjAuMS40XHJcbiAqIEJ1aWxkIGRhdGU6IFR1ZSBKdW4gMDIgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0IHsgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWYsIFJlbmRlcmVyMiwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4VGVtcGxhdGVIb3N0IH0gZnJvbSAnLi90ZW1wbGF0ZS1ob3N0JztcclxuZXhwb3J0IGRlY2xhcmUgY29uc3QgRFhfVEVNUExBVEVfV1JBUFBFUl9DTEFTUyA9IFwiZHgtdGVtcGxhdGUtd3JhcHBlclwiO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSZW5kZXJEYXRhIHtcclxuICAgIG1vZGVsOiBhbnk7XHJcbiAgICBpbmRleDogbnVtYmVyO1xyXG4gICAgY29udGFpbmVyOiBhbnk7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhUZW1wbGF0ZURpcmVjdGl2ZSB7XHJcbiAgICBwcml2YXRlIHRlbXBsYXRlUmVmO1xyXG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xyXG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcclxuICAgIHByaXZhdGUgem9uZTtcclxuICAgIGR4VGVtcGxhdGVPZjogYW55O1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIHRlbXBsYXRlSG9zdDogRHhUZW1wbGF0ZUhvc3QsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHpvbmU6IE5nWm9uZSk7XHJcbiAgICBwcml2YXRlIHJlbmRlclRlbXBsYXRlO1xyXG4gICAgcmVuZGVyKHJlbmRlckRhdGE6IFJlbmRlckRhdGEpOiBhbnk7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhUZW1wbGF0ZU1vZHVsZSB7XHJcbn1cclxuIl19