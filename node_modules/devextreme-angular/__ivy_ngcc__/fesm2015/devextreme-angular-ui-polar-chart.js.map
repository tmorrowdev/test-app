{"version":3,"file":"devextreme-angular-ui-polar-chart.js","sources":["ng:/devextreme-angular/ui/polar-chart/index.ts","ng:/devextreme-angular/ui/polar-chart/devextreme-angular-ui-polar-chart.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.4\n * Build date: Tue Jun 02 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPolarChart from 'devextreme/viz/polar_chart';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoAdaptiveLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAnimationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiAnnotationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoImageModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentAxisModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConstantLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLabelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConstantLineStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiStripModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStripStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonAnnotationSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonAxisSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonSeriesSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAreaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHoverStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHatchingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConnectorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSelectionStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoValueErrorBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScatterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDataPrepareSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLegendModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSubtitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadingIndicatorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSeriesTemplateModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoValueAxisModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinVisualRangeLengthModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiAnnotationComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The PolarChart is a widget that visualizes data in a polar coordinate system.\r\n */\r\n@Component({\r\n    selector: 'dx-polar-chart',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPolarChartComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPolarChart;\r\n\r\n    /**\r\n     * Specifies adaptive layout options.\r\n     */\r\n    @Input()\r\n    get adaptiveLayout(): { height?: number, keepLabels?: boolean, width?: number } {\r\n        return this._getOption('adaptiveLayout');\r\n    }\r\n    set adaptiveLayout(value: { height?: number, keepLabels?: boolean, width?: number }) {\r\n        this._setOption('adaptiveLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies animation options.\r\n     */\r\n    @Input()\r\n    get animation(): boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the annotation collection.\r\n     */\r\n    @Input()\r\n    get annotations(): Array<DevExpress.viz.dxPolarChartAnnotationConfig | any> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotations(value: Array<DevExpress.viz.dxPolarChartAnnotationConfig | any>) {\r\n        this._setOption('annotations', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies argument axis options for the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get argumentAxis(): { allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number } {\r\n        return this._getOption('argumentAxis');\r\n    }\r\n    set argumentAxis(value: { allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number }) {\r\n        this._setOption('argumentAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Controls the padding and consequently the angular width of a group of bars with the same argument using relative units. Ignored if the barGroupWidth option is set.\r\n     */\r\n    @Input()\r\n    get barGroupPadding(): number {\r\n        return this._getOption('barGroupPadding');\r\n    }\r\n    set barGroupPadding(value: number) {\r\n        this._setOption('barGroupPadding', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a fixed angular width for groups of bars with the same argument, measured in degrees. Takes precedence over the barGroupPadding option.\r\n     */\r\n    @Input()\r\n    get barGroupWidth(): number {\r\n        return this._getOption('barGroupWidth');\r\n    }\r\n    set barGroupWidth(value: number) {\r\n        this._setOption('barGroupWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonPolarChartSeries.barPadding instead.\r\n     */\r\n    @Input()\r\n    get barWidth(): number {\r\n        return this._getOption('barWidth');\r\n    }\r\n    set barWidth(value: number) {\r\n        this._setOption('barWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies settings common for all annotations in the PolarChart.\r\n     */\r\n    @Input()\r\n    get commonAnnotationSettings(): DevExpress.viz.dxPolarChartCommonAnnotationConfig {\r\n        return this._getOption('commonAnnotationSettings');\r\n    }\r\n    set commonAnnotationSettings(value: DevExpress.viz.dxPolarChartCommonAnnotationConfig) {\r\n        this._setOption('commonAnnotationSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object defining the configuration options that are common for all axes of the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get commonAxisSettings(): { allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number } {\r\n        return this._getOption('commonAxisSettings');\r\n    }\r\n    set commonAxisSettings(value: { allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number }) {\r\n        this._setOption('commonAxisSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object defining the configuration options that are common for all series of the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get commonSeriesSettings(): any {\r\n        return this._getOption('commonSeriesSettings');\r\n    }\r\n    set commonSeriesSettings(value: any) {\r\n        this._setOption('commonSeriesSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of the parent page element.\r\n     */\r\n    @Input()\r\n    get containerBackgroundColor(): string {\r\n        return this._getOption('containerBackgroundColor');\r\n    }\r\n    set containerBackgroundColor(value: string) {\r\n        this._setOption('containerBackgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes an individual annotation.\r\n     */\r\n    @Input()\r\n    get customizeAnnotation(): Function {\r\n        return this._getOption('customizeAnnotation');\r\n    }\r\n    set customizeAnnotation(value: Function) {\r\n        this._setOption('customizeAnnotation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual point label.\r\n     */\r\n    @Input()\r\n    get customizeLabel(): Function {\r\n        return this._getOption('customizeLabel');\r\n    }\r\n    set customizeLabel(value: Function) {\r\n        this._setOption('customizeLabel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual series point.\r\n     */\r\n    @Input()\r\n    get customizePoint(): Function {\r\n        return this._getOption('customizePoint');\r\n    }\r\n    set customizePoint(value: Function) {\r\n        this._setOption('customizePoint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object providing options for managing data from a data source.\r\n     */\r\n    @Input()\r\n    get dataPrepareSettings(): { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function } {\r\n        return this._getOption('dataPrepareSettings');\r\n    }\r\n    set dataPrepareSettings(value: { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }) {\r\n        this._setOption('dataPrepareSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonPolarChartSeries.ignoreEmptyPoints instead.\r\n     */\r\n    @Input()\r\n    get equalBarWidth(): boolean {\r\n        return this._getOption('equalBarWidth');\r\n    }\r\n    set equalBarWidth(value: boolean) {\r\n        this._setOption('equalBarWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the options of a chart's legend.\r\n     */\r\n    @Input()\r\n    get legend(): { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean } {\r\n        return this._getOption('legend');\r\n    }\r\n    set legend(value: { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }) {\r\n        this._setOption('legend', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Forces the widget to treat negative values as zeroes. Applies to stacked-like series only.\r\n     */\r\n    @Input()\r\n    get negativesAsZeroes(): boolean {\r\n        return this._getOption('negativesAsZeroes');\r\n    }\r\n    set negativesAsZeroes(value: boolean) {\r\n        this._setOption('negativesAsZeroes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the palette to be used for colorizing series and their elements.\r\n     */\r\n    @Input()\r\n    get palette(): string | Array<string> {\r\n        return this._getOption('palette');\r\n    }\r\n    set palette(value: string | Array<string>) {\r\n        this._setOption('palette', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart widget) or points in a series (in the PieChart widget).\r\n     */\r\n    @Input()\r\n    get paletteExtensionMode(): string {\r\n        return this._getOption('paletteExtensionMode');\r\n    }\r\n    set paletteExtensionMode(value: string) {\r\n        this._setOption('paletteExtensionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single point or multiple points can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get pointSelectionMode(): string {\r\n        return this._getOption('pointSelectionMode');\r\n    }\r\n    set pointSelectionMode(value: string) {\r\n        this._setOption('pointSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the chart must behave when series point labels overlap.\r\n     */\r\n    @Input()\r\n    get resolveLabelOverlapping(): string {\r\n        return this._getOption('resolveLabelOverlapping');\r\n    }\r\n    set resolveLabelOverlapping(value: string) {\r\n        this._setOption('resolveLabelOverlapping', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options for PolarChart widget series.\r\n     */\r\n    @Input()\r\n    get series(): any | Array<any> {\r\n        return this._getOption('series');\r\n    }\r\n    set series(value: any | Array<any>) {\r\n        this._setOption('series', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single series or multiple series can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get seriesSelectionMode(): string {\r\n        return this._getOption('seriesSelectionMode');\r\n    }\r\n    set seriesSelectionMode(value: string) {\r\n        this._setOption('seriesSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines options for the series template.\r\n     */\r\n    @Input()\r\n    get seriesTemplate(): { customizeSeries?: Function, nameField?: string } {\r\n        return this._getOption('seriesTemplate');\r\n    }\r\n    set seriesTemplate(value: { customizeSeries?: Function, nameField?: string }) {\r\n        this._setOption('seriesTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    @Input()\r\n    get title(): string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    @Input()\r\n    get tooltip(): { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether or not to display a \"spider web\".\r\n     */\r\n    @Input()\r\n    get useSpiderWeb(): boolean {\r\n        return this._getOption('useSpiderWeb');\r\n    }\r\n    set useSpiderWeb(value: boolean) {\r\n        this._setOption('useSpiderWeb', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies value axis options for the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get valueAxis(): { allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number } {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxis(value: { allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }) {\r\n        this._setOption('valueAxis', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a label on the argument axis is clicked or tapped.\r\n     */\r\n    @Output() onArgumentAxisClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when all series are ready.\r\n     */\r\n    @Output() onDone: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a legend item is clicked or tapped.\r\n     */\r\n    @Output() onLegendClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is clicked or tapped.\r\n     */\r\n    @Output() onPointClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series point.\r\n     */\r\n    @Output() onPointHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is selected or selection is canceled.\r\n     */\r\n    @Output() onPointSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is clicked or tapped.\r\n     */\r\n    @Output() onSeriesClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series.\r\n     */\r\n    @Output() onSeriesHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is selected or selection is canceled.\r\n     */\r\n    @Output() onSeriesSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when zooming or panning ends.\r\n     */\r\n    @Output() onZoomEnd: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when zooming or panning begins.\r\n     */\r\n    @Output() onZoomStart: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() adaptiveLayoutChange: EventEmitter<{ height?: number, keepLabels?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() animationChange: EventEmitter<boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() annotationsChange: EventEmitter<Array<DevExpress.viz.dxPolarChartAnnotationConfig | any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() argumentAxisChange: EventEmitter<{ allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupPaddingChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonAnnotationSettingsChange: EventEmitter<DevExpress.viz.dxPolarChartCommonAnnotationConfig>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonAxisSettingsChange: EventEmitter<{ allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonSeriesSettingsChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() containerBackgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeAnnotationChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeLabelChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizePointChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataPrepareSettingsChange: EventEmitter<{ checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() equalBarWidthChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() legendChange: EventEmitter<{ backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() negativesAsZeroesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteChange: EventEmitter<string | Array<string>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteExtensionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() resolveLabelOverlappingChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesChange: EventEmitter<any | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesTemplateChange: EventEmitter<{ customizeSeries?: Function, nameField?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() useSpiderWebChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueAxisChange: EventEmitter<{ allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiAnnotationComponent)\r\n    get annotationsChildren(): QueryList<DxiAnnotationComponent> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotationsChildren(value) {\r\n        this.setChildren('annotations', value);\r\n    }\r\n\r\n    @ContentChildren(DxiSeriesComponent)\r\n    get seriesChildren(): QueryList<DxiSeriesComponent> {\r\n        return this._getOption('series');\r\n    }\r\n    set seriesChildren(value) {\r\n        this.setChildren('series', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'argumentAxisClick', emit: 'onArgumentAxisClick' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'done', emit: 'onDone' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'legendClick', emit: 'onLegendClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pointClick', emit: 'onPointClick' },\r\n            { subscribe: 'pointHoverChanged', emit: 'onPointHoverChanged' },\r\n            { subscribe: 'pointSelectionChanged', emit: 'onPointSelectionChanged' },\r\n            { subscribe: 'seriesClick', emit: 'onSeriesClick' },\r\n            { subscribe: 'seriesHoverChanged', emit: 'onSeriesHoverChanged' },\r\n            { subscribe: 'seriesSelectionChanged', emit: 'onSeriesSelectionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { subscribe: 'zoomEnd', emit: 'onZoomEnd' },\r\n            { subscribe: 'zoomStart', emit: 'onZoomStart' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'annotationsChange' },\r\n            { emit: 'argumentAxisChange' },\r\n            { emit: 'barGroupPaddingChange' },\r\n            { emit: 'barGroupWidthChange' },\r\n            { emit: 'barWidthChange' },\r\n            { emit: 'commonAnnotationSettingsChange' },\r\n            { emit: 'commonAxisSettingsChange' },\r\n            { emit: 'commonSeriesSettingsChange' },\r\n            { emit: 'containerBackgroundColorChange' },\r\n            { emit: 'customizeAnnotationChange' },\r\n            { emit: 'customizeLabelChange' },\r\n            { emit: 'customizePointChange' },\r\n            { emit: 'dataPrepareSettingsChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'equalBarWidthChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'negativesAsZeroesChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointSelectionModeChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'seriesChange' },\r\n            { emit: 'seriesSelectionModeChange' },\r\n            { emit: 'seriesTemplateChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'useSpiderWebChange' },\r\n            { emit: 'valueAxisChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxPolarChart(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('annotations', changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('series', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('annotations');\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('series');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoSelectionStyleModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoScatterModule,\r\n    DxoStackedbarModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoValueAxisModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPolarChartComponent\r\n  ],\r\n  exports: [\r\n    DxPolarChartComponent,\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoSelectionStyleModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoScatterModule,\r\n    DxoStackedbarModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoValueAxisModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPolarChartModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}