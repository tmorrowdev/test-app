{"version":3,"file":"devextreme-angular-ui-sparkline.js","sources":["ng:/devextreme-angular/ui/sparkline/index.ts","ng:/devextreme-angular/ui/sparkline/devextreme-angular-ui-sparkline.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 20.1.4\n * Build date: Tue Jun 02 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxSparkline from 'devextreme/viz/sparkline';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The Sparkline widget is a compact chart that contains only one series. Owing to their size, sparklines occupy very little space and can be easily collected in a table or embedded straight in text.\r\n */\r\n@Component({\r\n    selector: 'dx-sparkline',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxSparklineComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxSparkline;\r\n\r\n    /**\r\n     * Specifies the data source field that provides arguments for a sparkline.\r\n     */\r\n    @Input()\r\n    get argumentField(): string {\r\n        return this._getOption('argumentField');\r\n    }\r\n    set argumentField(value: string) {\r\n        this._setOption('argumentField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating negative values. Available for a sparkline of the bar type only.\r\n     */\r\n    @Input()\r\n    get barNegativeColor(): string {\r\n        return this._getOption('barNegativeColor');\r\n    }\r\n    set barNegativeColor(value: string) {\r\n        this._setOption('barNegativeColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating positive values. Available for a sparkline of the bar type only.\r\n     */\r\n    @Input()\r\n    get barPositiveColor(): string {\r\n        return this._getOption('barPositiveColor');\r\n    }\r\n    set barPositiveColor(value: string) {\r\n        this._setOption('barPositiveColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of both the first and last points on a sparkline.\r\n     */\r\n    @Input()\r\n    get firstLastColor(): string {\r\n        return this._getOption('firstLastColor');\r\n    }\r\n    set firstLastColor(value: string) {\r\n        this._setOption('firstLastColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the sparkline should ignore null data points.\r\n     */\r\n    @Input()\r\n    get ignoreEmptyPoints(): boolean {\r\n        return this._getOption('ignoreEmptyPoints');\r\n    }\r\n    set ignoreEmptyPoints(value: boolean) {\r\n        this._setOption('ignoreEmptyPoints', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    @Input()\r\n    get lineColor(): string {\r\n        return this._getOption('lineColor');\r\n    }\r\n    set lineColor(value: string) {\r\n        this._setOption('lineColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a width for a line on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    @Input()\r\n    get lineWidth(): number {\r\n        return this._getOption('lineWidth');\r\n    }\r\n    set lineWidth(value: number) {\r\n        this._setOption('lineWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating the values that are less than the winloss threshold. Available for a sparkline of the winloss type only.\r\n     */\r\n    @Input()\r\n    get lossColor(): string {\r\n        return this._getOption('lossColor');\r\n    }\r\n    set lossColor(value: string) {\r\n        this._setOption('lossColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of the maximum point on a sparkline.\r\n     */\r\n    @Input()\r\n    get maxColor(): string {\r\n        return this._getOption('maxColor');\r\n    }\r\n    set maxColor(value: string) {\r\n        this._setOption('maxColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the maximum value of the sparkline's value axis.\r\n     */\r\n    @Input()\r\n    get maxValue(): number {\r\n        return this._getOption('maxValue');\r\n    }\r\n    set maxValue(value: number) {\r\n        this._setOption('maxValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the boundary of the minimum point on a sparkline.\r\n     */\r\n    @Input()\r\n    get minColor(): string {\r\n        return this._getOption('minColor');\r\n    }\r\n    set minColor(value: string) {\r\n        this._setOption('minColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the minimum value of the sparkline value axis.\r\n     */\r\n    @Input()\r\n    get minValue(): number {\r\n        return this._getOption('minValue');\r\n    }\r\n    set minValue(value: number) {\r\n        this._setOption('minValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for points on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    @Input()\r\n    get pointColor(): string {\r\n        return this._getOption('pointColor');\r\n    }\r\n    set pointColor(value: string) {\r\n        this._setOption('pointColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the diameter of sparkline points in pixels. Available for the sparklines of line- and area-like types.\r\n     */\r\n    @Input()\r\n    get pointSize(): number {\r\n        return this._getOption('pointSize');\r\n    }\r\n    set pointSize(value: number) {\r\n        this._setOption('pointSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a symbol to use as a point marker on a sparkline. Available for the sparklines of the line- and area-like types.\r\n     */\r\n    @Input()\r\n    get pointSymbol(): string {\r\n        return this._getOption('pointSymbol');\r\n    }\r\n    set pointSymbol(value: string) {\r\n        this._setOption('pointSymbol', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to indicate both the first and last values on a sparkline.\r\n     */\r\n    @Input()\r\n    get showFirstLast(): boolean {\r\n        return this._getOption('showFirstLast');\r\n    }\r\n    set showFirstLast(value: boolean) {\r\n        this._setOption('showFirstLast', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to indicate both the minimum and maximum values on a sparkline.\r\n     */\r\n    @Input()\r\n    get showMinMax(): boolean {\r\n        return this._getOption('showMinMax');\r\n    }\r\n    set showMinMax(value: boolean) {\r\n        this._setOption('showMinMax', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the tooltip.\r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Determines the type of a sparkline.\r\n     */\r\n    @Input()\r\n    get type(): string {\r\n        return this._getOption('type');\r\n    }\r\n    set type(value: string) {\r\n        this._setOption('type', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the data source field that provides values for a sparkline.\r\n     */\r\n    @Input()\r\n    get valueField(): string {\r\n        return this._getOption('valueField');\r\n    }\r\n    set valueField(value: string) {\r\n        this._setOption('valueField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a color for the bars indicating the values greater than a winloss threshold. Available for a sparkline of the winloss type only.\r\n     */\r\n    @Input()\r\n    get winColor(): string {\r\n        return this._getOption('winColor');\r\n    }\r\n    set winColor(value: string) {\r\n        this._setOption('winColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a value that serves as a threshold for the sparkline of the winloss type.\r\n     */\r\n    @Input()\r\n    get winlossThreshold(): number {\r\n        return this._getOption('winlossThreshold');\r\n    }\r\n    set winlossThreshold(value: number) {\r\n        this._setOption('winlossThreshold', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() argumentFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barNegativeColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barPositiveColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() firstLastColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() ignoreEmptyPointsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() lineColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() lineWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() lossColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minValueChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointSymbolChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showFirstLastChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showMinMaxChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery | string, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, interactive?: boolean, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() typeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() winColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() winlossThresholdChange: EventEmitter<number>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'argumentFieldChange' },\r\n            { emit: 'barNegativeColorChange' },\r\n            { emit: 'barPositiveColorChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'firstLastColorChange' },\r\n            { emit: 'ignoreEmptyPointsChange' },\r\n            { emit: 'lineColorChange' },\r\n            { emit: 'lineWidthChange' },\r\n            { emit: 'lossColorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'maxColorChange' },\r\n            { emit: 'maxValueChange' },\r\n            { emit: 'minColorChange' },\r\n            { emit: 'minValueChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointColorChange' },\r\n            { emit: 'pointSizeChange' },\r\n            { emit: 'pointSymbolChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showFirstLastChange' },\r\n            { emit: 'showMinMaxChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'valueFieldChange' },\r\n            { emit: 'winColorChange' },\r\n            { emit: 'winlossThresholdChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxSparkline(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxSparklineComponent\r\n  ],\r\n  exports: [\r\n    DxSparklineComponent,\r\n    DxoMarginModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxSparklineModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}