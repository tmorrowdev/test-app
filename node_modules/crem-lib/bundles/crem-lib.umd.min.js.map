{"version":3,"sources":["ng://crem-lib/lib/dropdown/dropdown.component.ts","ng://crem-lib/lib/dropdown/dropdown.module.ts","ng://crem-lib/lib/dxebutton/dxebutton.component.ts","ng://crem-lib/lib/dxebutton/dxebutton.module.ts","ng://crem-lib/lib/dxedatagrid/dxedatagrid.service.ts","ng://crem-lib/lib/dxedatagrid/dxedatagrid.component.ts","ng://crem-lib/lib/dxedatagrid/dxedatagrid.module.ts","ng://crem-lib/lib/hero-metric/hero-metric.component.ts","ng://crem-lib/lib/hero-metric/hero-metric.module.ts"],"names":["DropdownComponent","selectors","inputs","label","placeholder","disabled","items","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","ID","DropdownModule","imports","CommonModule","DxSelectBoxModule","DxTextBoxModule","DxTemplateModule","declarations","exports","DxebuttonComponent","prototype","ngOnInit","content","color","type","icon","ButtonModule","DxButtonModule","DxedatagridService","getDataSource","DataSource","store","url","beforeSend","request","params","startDate","endDate","d_r1","value","ctx_r0","customizeTooltip","DxedatagridComponent","service","_this","this","contentReady","e","collapsed","component","expandRow","pointsInfo","text","parseInt","originalValue","dataSource","core","ɵɵdirectiveInject","pagesize","i0.ɵɵlistener","$event","i0.ɵɵtemplate","ɵɵpureFunction0","_c0","DatagridModule","providers","DxDataGridModule","DxBulletModule","HeroMetricComponent","title","subtitle","heroMetric","sidekickMetricA","sidekickMetricAStyle","sidekickMetricB","sidekickMetricBStyle","tooltip","i0.ɵɵtextInterpolate1","HeroMetricModule","BrowserAnimationsModule","MatCardModule","MatMenuModule"],"mappings":"65CAmCE,SAAAA,6CATWA,qCAAAA,EAAiBC,UAAA,CAAA,CAAA,kBAAAC,OAAA,CAAAC,MAAA,QAAAC,YAAA,cAAAC,SAAA,WAAAC,MAAA,SAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAAA,YAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,kBAAA,CAAA,cAAA,QAAA,YAAA,KAAA,EAAA,QAAA,cAAA,WAAA,UAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAlBlBE,EAAAA,eAAAA,EAAAA,MAAAA,GACVA,EAAAA,eAAAA,EAAAA,MAAAA,GACIA,EAAAA,eAAAA,EAAAA,MAAAA,GAA4BC,EAAAA,OAAAA,GAASC,EAAAA,eACrCF,EAAAA,eAAAA,EAAAA,MAAAA,GACAG,EAAAA,UAAAA,EAAAA,gBAAAA,GAQAD,EAAAA,eACJA,EAAAA,eAEFA,EAAAA,sBAbkCE,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,OAGlBD,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAe,cAAAP,EAAAR,YAAfe,CAAe,WAAAP,EAAAP,SAAfc,CAAe,QAAAP,EAAAN,MAAA,GAAAc,03XCN/B,SAAAC,4CAWaA,iEAAAA,IAAcC,QAAA,CAVhB,CACPC,EAAAA,aACAC,EAAAA,kBACAC,EAAAA,gBACAC,EAAAA,2FAMSL,EAAc,CAAAM,aAAA,CAJV3B,GAAiBsB,QAAA,CAL9BC,EAAAA,aACAC,EAAAA,kBACAC,EAAAA,gBACAC,EAAAA,kBAAgBE,QAAA,CAGR5B,sBCmBX,SAAA6B,YAEAA,EAAAC,UAAAC,SAAA,8CAnBYF,qCAAAA,EAAkB5B,UAAA,CAAA,CAAA,gBAAAC,OAAA,CAAA8B,QAAA,UAAA3B,SAAA,WAAA4B,MAAA,QAAAC,KAAA,OAAAC,KAAA,QAAA5B,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,cAAA,OAAA,OAAA,WAAA,SAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAPjBK,EAAAA,UAAAA,EAAAA,YAAAA,QAAWG,EAAAA,WAAAA,cAAAA,EAAAA,KAAAA,CAAoB,OAAAP,EAAAoB,QAApBb,CAAoB,OAAAP,EAAAqB,MAApBd,CAAoB,WAAAP,EAAAP,SAApBc,CAAoB,OAAAP,EAAAuB,w3XCL7C,SAAAC,4CAIaA,iEAAAA,IAAYd,QAAA,CAHd,CAACC,EAAAA,aAAcc,EAAAA,yFAGbD,EAAY,CAAAT,aAAA,CAFRE,GAAkBP,QAAA,CADvBC,EAAAA,aAAcc,EAAAA,mCCF1B,SAAAC,KAaA,OAZIA,EAAAR,UAAAS,cAAA,WACI,OAAO,IAAIC,EAAW,CAClBC,MAAO,CACHP,KAAM,QACNQ,IAAK,iEACLC,WAAY,SAACC,GACTA,EAAQC,OAAOC,UAAY,aAC3BF,EAAQC,OAAOE,QAAU,kBAK7CT,8BCwBIzB,EAAAA,eAAAA,EAAAA,OACMA,EAAAA,eAAAA,EAAAA,MAAAA,IACIA,EAAAA,eAAAA,EAAAA,YAAAA,IAMIG,EAAAA,UAAAA,EAAAA,WAAAA,IACAH,EAAAA,eAAAA,EAAAA,cAAAA,IAIIG,EAAAA,UAAAA,EAAAA,WAAAA,IACJD,EAAAA,eACAC,EAAAA,UAAAA,EAAAA,aAAAA,IAKJD,EAAAA,eACJA,EAAAA,eACJA,EAAAA,2DAnBYE,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,cAAAA,EAAAA,CAAoB,iBAAA,EAApBA,CAAoB,kBAAA,EAApBA,CAAoB,gBAAA,IAApBA,CAAoB,QAAA,IAAA6B,EAAAC,OAKVhC,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,QAAAA,IAAAA,CAAa,SAAA,IAEnBF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,WAAAA,EAAAA,CAAgB,mBAAA,EAAhBA,CAAgB,mBAAA+B,EAAAC,kBAGNlC,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,OAAAA,IAGVF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,MAAAA,EAAAA,CAAS,SAAA,EAATA,CAAS,OAAA,wDAwB3B,SAAAiC,EAAYC,GAAZ,IAAAC,EAAAC,KAVAA,KAAAC,aAAe,SAACC,GACRH,EAAKI,YACLJ,EAAKI,WAAY,EACjBD,EAAEE,UAAUC,UAAU,CAAC,iBAG/BL,KAAAJ,iBAAmB,SAACU,GAChB,MAAO,CAAEC,KAAMC,SAAS,GAAIF,EAAWG,eAAiB,MAIxDT,KAAKU,WAAaZ,EAAQd,wDAfrBa,GAAoBc,EAAAC,kBAAA7B,sCAApBc,EAAoBnD,UAAA,CAAA,CAAA,kBAAAC,OAAA,CAAA+D,WAAA,aAAAP,UAAA,YAAAU,SAAA,YAAA7D,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,KAAA,gBAAA,EAAA,aAAA,mBAAA,wBAAA,wBAAA,cAAA,kBAAA,CAAA,EAAA,YAAA,CAAA,EAAA,uBAAA,oBAAA,CAAA,EAAA,UAAA,0BAAA,CAAA,EAAA,WAAA,CAAA,EAAA,iBAAA,CAAA,YAAA,UAAA,EAAA,cAAA,CAAA,YAAA,SAAA,UAAA,cAAA,WAAA,SAAA,SAAA,WAAA,YAAA,QAAA,CAAA,UAAA,aAAA,YAAA,WAAA,eAAA,uBAAA,WAAA,SAAA,SAAA,UAAA,YAAA,OAAA,WAAA,SAAA,EAAA,iBAAA,CAAA,YAAA,WAAA,WAAA,QAAA,CAAA,YAAA,SAAA,WAAA,UAAA,CAAA,YAAA,SAAA,WAAA,UAAA,CAAA,YAAA,UAAA,WAAA,UAAA,CAAA,YAAA,WAAA,WAAA,UAAA,CAAA,EAAA,aAAA,gBAAA,CAAA,EAAA,cAAA,CAAA,EAAA,aAAA,gBAAA,kBAAA,gBAAA,SAAA,CAAA,EAAA,QAAA,UAAA,CAAA,EAAA,UAAA,mBAAA,oBAAA,CAAA,EAAA,QAAA,CAAA,EAAA,MAAA,SAAA,SAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3DlBE,EAAAA,eAAAA,EAAAA,eAAAA,GAMXwD,EAAAA,WAAAA,kBAAAA,SAAAA,GAAAA,OAAkBzD,EAAA4C,aAAAc,MAElBtD,EAAAA,UAAAA,EAAAA,aAAAA,GACAA,EAAAA,UAAAA,EAAAA,YAAAA,GAIAA,EAAAA,UAAAA,EAAAA,mBAAAA,GAIAA,EAAAA,UAAAA,EAAAA,kBAAAA,GAGAA,EAAAA,UAAAA,EAAAA,eAAAA,GAIAA,EAAAA,UAAAA,EAAAA,aAAAA,GACAA,EAAAA,UAAAA,EAAAA,aAAAA,GACAA,EAAAA,UAAAA,EAAAA,aAAAA,GACAA,EAAAA,UAAAA,EAAAA,aAAAA,GACAA,EAAAA,UAAAA,GAAAA,aAAAA,IACAA,EAAAA,UAAAA,GAAAA,aAAAA,IACAA,EAAAA,UAAAA,GAAAA,aAAAA,IACAA,EAAAA,UAAAA,GAAAA,aAAAA,IAEAuD,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,GAAAA,MAAAA,IAuBJxD,EAAAA,sBAvDII,EAAAA,WAAAA,aAAAA,EAAAA,WAAAA,CAAyB,oBAAA,EAAzBA,CAAyB,yBAAA,EAAzBA,CAAyB,yBAAA,EAAzBA,CAAyB,eAAA,GAObF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,WAAAA,EAAAA,UAERF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,wBAAAA,EAAAA,CAA6B,mBAAA+C,EAAAM,gBAAA,GAAAC,IAI7BxD,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,WAAAA,EAAAA,CAAgB,0BAAA,GAIhBF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,WAAAA,GAGAF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,iBAAAA,GAG4BF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,aAAAA,GAE8GF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,iBAAAA,GAOzIF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,eAAAA,gpYCjCT,SAAAuD,4CAOaA,iEAAAA,IAAcC,UAHd,CAACrC,GAAmBhB,QAAA,CAHtB,CAACC,EAAAA,aAAcqD,EAAAA,iBAAkBC,EAAAA,eAAgBnD,EAAAA,mDCezDb,EAAAA,eAAAA,EAAAA,MAAAA,GAAoDC,EAAAA,OAAAA,GAAmBC,EAAAA,6CAAnBE,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,2CACpDL,EAAAA,eAAAA,EAAAA,MAAAA,GAAoDC,EAAAA,OAAAA,GAAmBC,EAAAA,6CAAnBE,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,mFDV1CwD,EAAc,CAAA/C,aAAA,CALVyB,GAAoB9B,QAAA,CADzBC,EAAAA,aAAcqD,EAAAA,iBAAkBC,EAAAA,eAAgBnD,EAAAA,kBAAgBE,QAAA,CAEhEwB,sBCNZ,SAAA0B,6CA+BaA,qCAAAA,EAAmB7E,UAAA,CAAA,CAAA,gBAAAC,OAAA,CAAA6E,MAAA,QAAAC,SAAA,WAAAC,WAAA,aAAAC,gBAAA,kBAAAC,qBAAA,uBAAAC,gBAAA,kBAAAC,qBAAA,uBAAAC,QAAA,UAAAnD,KAAA,QAAA5B,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,2BAAA,CAAA,EAAA,qBAAA,CAAA,OAAA,OAAA,EAAA,qBAAA,CAAA,cAAA,WAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,cAAA,CAAA,EAAA,0BAAA,CAAA,QAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,mBAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA7BnBE,EAAAA,eAAAA,EAAAA,WAAAA,GACZA,EAAAA,eAAAA,EAAAA,mBACCA,EAAAA,eAAAA,EAAAA,kBAAgBC,EAAAA,OAAAA,GAASC,EAAAA,eACzBF,EAAAA,eAAAA,EAAAA,MAAAA,GACCG,EAAAA,UAAAA,EAAAA,IAAAA,GACAH,EAAAA,eAAAA,EAAAA,WAAAA,KAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,GACCC,EAAAA,OAAAA,GACDC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eACAF,EAAAA,eAAAA,GAAAA,oBACCA,EAAAA,eAAAA,GAAAA,MAAAA,GACCC,EAAAA,OAAAA,IACDC,EAAAA,eACAF,EAAAA,eAAAA,GAAAA,MAAAA,GACC0D,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GACDxD,EAAAA,eACDA,EAAAA,eACAF,EAAAA,eAAAA,GAAAA,mBACCA,EAAAA,eAAAA,GAAAA,qBACCC,EAAAA,OAAAA,IACDC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,4CAxBkBE,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,OAEDD,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,oBAAAA,GAGZF,EAAAA,UAAAA,GAAAsE,EAAAA,mBAAAA,IAAAA,EAAAA,QAAAA,KAOFtE,EAAAA,UAAAA,GAAAsE,EAAAA,mBAAAA,IAAAA,EAAAA,WAAAA,KAG4BtE,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,OAAAA,EAAAA,iBACAF,EAAAA,UAAAA,GAAAE,EAAAA,WAAAA,OAAAA,EAAAA,iBAK5BF,EAAAA,UAAAA,GAAAsE,EAAAA,mBAAAA,IAAAA,EAAAA,SAAAA,u+iGCvBH,SAAAC,4CAMaA,iEAAAA,IAAgBlE,QAAA,CALlB,CAACC,EAAAA,aAAckE,EAAAA,wBAAyBC,EAAAA,cAAeC,EAAAA,wFAKrDH,EAAgB,CAAA7D,aAAA,CAJZmD,GAAmBxD,QAAA,CADxBC,EAAAA,aAAckE,EAAAA,wBAAyBC,EAAAA,cAAeC,EAAAA,eAAa/D,QAAA,CAEnEkD","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nexport interface Item{\n  ID: number;\n  Value: string;\n}\n@Component({\n\tselector: 'crem-dropdown',\n\ttemplate: `<div class=\"dx-fieldset\">\n  <div class=\"dx-field\">\n      <div class=\"dx-field-label\">{{label}}</div>\n      <div class=\"dx-field-value\">\n      <dx-select-box\n                [items]=\"items\"\n                [placeholder]=\"placeholder\"\n                displayExpr=\"Value\"\n                valueExpr=\"ID\"\n                [disabled]=\"disabled\"\n                [value]=\"items[0].ID\"\n            ></dx-select-box>\n      </div>\n  </div>\n\n</div>`,\n  styleUrls: ['dropdown.component.scss']\n})\nexport class DropdownComponent  {\n\n\t@Input() public label: string;\n\t@Input() public placeholder: string;\n\t@Input() public disabled: boolean;\n  @Input() public items: Item[];\n\n\n\n  constructor(){\n\n  }\n\n\n}\n// import { DxDropDownBoxModule, DxListModule, DxTextBoxModule } from \"devextreme-angular\";\n// import DataSource from \"devextreme/data/data_source\";\n// import ArrayStore from 'devextreme/data/array_store';\n// // ...\n// export class AppComponent {\n//     fruits = [\n//         { id: 1, text: \"Apples\", image: \"images/Apples.svg\" },\n//         { id: 2, text: \"Oranges\", image: \"images/Oranges.svg\" },\n//         { id: 3, text: \"Lemons\", image: \"images/Lemons.svg\" },\n//         { id: 4, text: \"Pears\", image: \"images/Pears.svg\" },\n//         { id: 5, text: \"Pineapples\", image: \"images/Pineapples.svg\" }\n//     ];\n//     dataSource: DataSource;\n//     selectedFruit = this.fruits[0];\n//     isDropDownBoxOpened: Boolean = false;\n//     constructor() {\n//         this.dataSource = new DataSource({\n//             store: new ArrayStore({ data: this.fruits, key: \"id\" })\n//         });\n//     }\n//     changeDropDownBoxValue = function (args) {\n//         this.selectedFruit = args.addedItems[0];\n//         this.isDropDownBoxOpened = false;\n//     }\n// }\n// @NgModule({\n//     imports: [\n//         // ...\n//         DxDropDownBoxModule,\n//         DxListModule,\n//         DxTextBoxModule\n//     ],\n//     // ...\n// })\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { DropdownComponent } from './dropdown.component';\nimport { DxSelectBoxModule} from 'devextreme-angular/ui/select-box';\nimport { DxTextBoxModule } from 'devextreme-angular/ui/text-box';\nimport  {DxTemplateModule } from 'devextreme-angular/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DxSelectBoxModule,\n    DxTextBoxModule,\n    DxTemplateModule\n  ],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent],\n  schemas: []\n})\nexport class DropdownModule{}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\nexport type ColorOptions =  'costar-dark-blue' | 'costar' | 'error';\nexport type IconOptions = '' | 'home' | 'activefolder'|\t'airplane' | 'aligncenter' | 'alignjustify' | 'alignleft' | 'alignright' | 'arrowdown' | 'arrowleft' | 'arrowright' | 'arrowup' | 'background' | 'blockquote' | 'bold' | 'bookmark' | 'box' | 'bulletlist' | 'car' | 'card' | 'cart' | 'chart' | 'check' | 'chevrondoubleleft' | 'chevrondoubleright' | 'chevrondown' | 'chevronleft' | 'chevronright' | 'chevronup' | 'clear' | 'clearformat' | 'clearsquare' | 'clock' | 'close' | 'codeblock' | 'coffee' | 'collapse' | 'color' | 'columnchooser' | 'columnfield' | 'comment' | 'contains' | 'contentlayout' | 'copy' | 'cut' | 'datafield' | 'decreaseindent' | 'decreaselinespacing' | 'detailslayout' | 'docfile' | 'docxfile' | 'doesnotcontain' | 'download' | 'dragvertical' | 'edit' | 'endswith' | 'equal' | 'event' | 'expand' | 'export' | 'exportpdf' | 'exportselected' | 'exportxlsx' | 'favorites' | 'fieldchooser' | 'fields' | 'file' | 'fill' | 'filter' | 'floppy' | 'font' | 'fontsize' | 'food' | 'formula' | 'fullscreen' | 'gift' | 'globe' | 'greater' | 'greaterorequal' | 'group' | 'growfont' | 'header' | 'help' | 'hidepanel' | 'hierarchy' | 'image' | 'inactivefolder' | 'increaseindent' | 'increaselinespacing' | 'info' | 'isblank' | 'isnotblank' | 'italic' | 'key' | 'less' | 'lessorequal' | 'like' | 'link' | 'map' | 'mediumiconslayout' | 'mention' | 'menu' | 'message' | 'minus' | 'money' | 'more' | 'movetofolder' | 'music' | 'newfolder' | 'notequal' | 'orderedlist' | 'overflow' | 'palette' | 'parentfolder' | 'paste' | 'pdffile' | 'percent' | 'photo' | 'pin' | 'pinleft' | 'pinright' | 'plus' | 'pptfile' | 'pptxfile' | 'preferences' | 'print' | 'product' | 'pulldown' | 'range' | 'redo' | 'refresh' | 'rename' | 'repeat' | 'rowfield' | 'rtffile' | 'runner' | 'save' | 'search' | 'selectall' | 'share' | 'showpanel' | 'shrinkfont' | 'smalliconslayout' | 'sortdown' | 'sortdowntext' | 'sorted' | 'sortup' | 'sortuptext' | 'spindown' | 'spinleft' | 'spinright' | 'spinup' | 'square' | 'startswith' | 'strike' | 'subscript' | 'superscript' | 'tags' | 'tel' | 'tips' | 'toolbox' | 'trash' | 'txtfile' | 'underline' | 'undo' | 'unpin' | 'unselectall' | 'upload' | 'user' | 'variable' | 'video' | 'warning' | 'xlsfile' | 'xlsxfile';\nexport type TypeOptions = 'text' | 'contained' | 'outlined' ;\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: 'crem-button',\n  template:  `<dx-button [stylingMode]=\"type\"\n  [text]=\"content\"\n  [type]=\"color\"\n  [disabled]=\"disabled\"\n  [icon]=\"icon\"></dx-button> `,\n\tstyleUrls: ['dxebutton.component.scss']\n})\nexport class DxebuttonComponent implements OnInit {\n\t@Input()\n\tpublic content : string;\n\n\t@Input()\n\tpublic disabled : boolean;\n\n\t@Input()\n\tpublic color: ColorOptions;\n\n\t@Input()\n\tpublic type: TypeOptions;\n\n\t@Input()\n\tpublic icon: IconOptions;\n\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { DxebuttonComponent } from './dxebutton.component';\nimport { DxButtonModule } from 'devextreme-angular/ui/button';\n\n@NgModule({\n  imports: [CommonModule, DxButtonModule],\n  declarations: [DxebuttonComponent]\n})\nexport class ButtonModule{}\n","import { Injectable } from '@angular/core';\nimport 'devextreme/data/odata/store';\nimport DataSource from 'devextreme/data/data_source';\n\nexport class DxedatagridService {\n    getDataSource() {\n        return new DataSource({\n            store: {\n                type: 'odata',\n                url: 'https://js.devexpress.com/Demos/SalesViewer/odata/DaySaleDtoes',\n                beforeSend: (request) => {\n                    request.params.startDate = '2018-05-10';\n                    request.params.endDate = '2018-05-15';\n                }\n            }\n        });\n    }\n}\n","import { Component, Pipe, PipeTransform, Input } from '@angular/core';\n\nimport DataSource from 'devextreme/data/data_source';\nimport { DxedatagridService } from './dxedatagrid.service';\n\n\n@Component({\n    selector: 'crem-datagrid',\n    template: `<dx-data-grid id=\"gridContainer\"\n    [dataSource]=\"dataSource\"\n    [remoteOperations]=\"true\"\n    [allowColumnReordering]=\"true\"\n    [rowAlternationEnabled]=\"true\"\n    [showBorders]=\"false\"\n    (onContentReady)=\"contentReady($event)\">\n\n    <dxo-paging [pageSize]=\"pagesize\"></dxo-paging>\n    <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[10, 25, 50, 100]\"\n    ></dxo-pager>\n    <dxo-search-panel\n        [visible]=\"true\"\n        [highlightCaseSensitive]=\"true\"\n    ></dxo-search-panel>\n    <dxo-group-panel\n        [visible]=\"true\"\n    ></dxo-group-panel>\n    <dxo-grouping\n        [autoExpandAll]=\"false\"\n    ></dxo-grouping>\n\n    <dxi-column dataField=\"Product\" [groupIndex]=\"0\"></dxi-column>\n    <dxi-column dataField=\"Amount\" caption=\"Sale Amount\" dataType=\"number\" format=\"currency\" alignment=\"left\"></dxi-column>\n    <dxi-column caption=\"Discount %\" dataField=\"Discount\" cellTemplate=\"discountCellTemplate\" dataType=\"number\" format=\"percent\" alignment=\"left\" [allowGrouping]=\"false\" cssClass=\"bullet\"></dxi-column>\n    <dxi-column dataField=\"SaleDate\" dataType=\"date\"></dxi-column>\n    <dxi-column dataField=\"Region\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Sector\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Channel\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Customer\" dataType=\"string\"></dxi-column>\n\n    <div *dxTemplate=\"let d of 'discountCellTemplate'\">\n          <div class=\"chart-cell\">\n              <dx-bullet\n                  [showTarget]=\"false\"\n                  [showZeroLevel]=\"true\"\n                  [startScaleValue]=\"0\"\n                  [endScaleValue]=\"100\"\n                  [value]=\"d.value * 100\">\n                  <dxo-size [width]=\"150\" [height]=\"35\"></dxo-size>\n                  <dxo-tooltip\n                      [enabled]=\"true\"\n                      [paddingTopBottom]=\"2\"\n                      [customizeTooltip]=\"customizeTooltip\">\n                      <dxo-font [size]=\"18\"></dxo-font>\n                  </dxo-tooltip>\n                  <dxo-margin\n                      [top]=\"5\"\n                      [bottom]=\"0\"\n                      [left]=\"5\"\n                  ></dxo-margin>\n              </dx-bullet>\n          </div>\n      </div>\n</dx-data-grid>`,\n    styleUrls: ['dxedatagrid.component.scss']\n})\nexport class DxedatagridComponent {\n  @Input() dataSource: DataSource;\n  @Input() collapsed : boolean;\n  @Input() pagesize: number;\n    contentReady = (e) => {\n        if(!this.collapsed) {\n            this.collapsed = true;\n            e.component.expandRow(['EnviroCare']);\n        }\n    };\n    customizeTooltip = (pointsInfo) => {\n        return { text: parseInt('', pointsInfo.originalValue) + '%' };\n    }\n\n    constructor(service: DxedatagridService) {\n        this.dataSource = service.getDataSource();\n    }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DxedatagridComponent } from './dxedatagrid.component';\nimport { DxedatagridService } from './dxedatagrid.service';\nimport { DxDataGridModule} from 'devextreme-angular/ui/data-grid';\nimport {DxBulletModule} from 'devextreme-angular/ui/bullet';\nimport {DxTemplateModule} from 'devextreme-angular/core';\n\n@NgModule({\n  imports: [CommonModule, DxDataGridModule, DxBulletModule, DxTemplateModule],\n  declarations: [DxedatagridComponent],\n  exports: [DxedatagridComponent],\n  providers: [DxedatagridService]\n})\n// tslint:disable-next-line: eofline\nexport class DatagridModule{}\n","import { Component, OnInit, Input } from '@angular/core';\n\n\nexport type Icons = '' | 'home' | 'activefolder'|\t'airplane' | 'aligncenter' | 'alignjustify' | 'alignleft' | 'alignright' | 'arrowdown' | 'arrowleft' | 'arrowright' | 'arrowup' | 'background' | 'blockquote' | 'bold' | 'bookmark' | 'box' | 'bulletlist' | 'car' | 'card' | 'cart' | 'chart' | 'check' | 'chevrondoubleleft' | 'chevrondoubleright' | 'chevrondown' | 'chevronleft' | 'chevronright' | 'chevronup' | 'clear' | 'clearformat' | 'clearsquare' | 'clock' | 'close' | 'codeblock' | 'coffee' | 'collapse' | 'color' | 'columnchooser' | 'columnfield' | 'comment' | 'contains' | 'contentlayout' | 'copy' | 'cut' | 'datafield' | 'decreaseindent' | 'decreaselinespacing' | 'detailslayout' | 'docfile' | 'docxfile' | 'doesnotcontain' | 'download' | 'dragvertical' | 'edit' | 'endswith' | 'equal' | 'event' | 'expand' | 'export' | 'exportpdf' | 'exportselected' | 'exportxlsx' | 'favorites' | 'fieldchooser' | 'fields' | 'file' | 'fill' | 'filter' | 'floppy' | 'font' | 'fontsize' | 'food' | 'formula' | 'fullscreen' | 'gift' | 'globe' | 'greater' | 'greaterorequal' | 'group' | 'growfont' | 'header' | 'help' | 'hidepanel' | 'hierarchy' | 'image' | 'inactivefolder' | 'increaseindent' | 'increaselinespacing' | 'info' | 'isblank' | 'isnotblank' | 'italic' | 'key' | 'less' | 'lessorequal' | 'like' | 'link' | 'map' | 'mediumiconslayout' | 'mention' | 'menu' | 'message' | 'minus' | 'money' | 'more' | 'movetofolder' | 'music' | 'newfolder' | 'notequal' | 'orderedlist' | 'overflow' | 'palette' | 'parentfolder' | 'paste' | 'pdffile' | 'percent' | 'photo' | 'pin' | 'pinleft' | 'pinright' | 'plus' | 'pptfile' | 'pptxfile' | 'preferences' | 'print' | 'product' | 'pulldown' | 'range' | 'redo' | 'refresh' | 'rename' | 'repeat' | 'rowfield' | 'rtffile' | 'runner' | 'save' | 'search' | 'selectall' | 'share' | 'showpanel' | 'shrinkfont' | 'smalliconslayout' | 'sortdown' | 'sortdowntext' | 'sorted' | 'sortup' | 'sortuptext' | 'spindown' | 'spinleft' | 'spinright' | 'spinup' | 'square' | 'startswith' | 'strike' | 'subscript' | 'superscript' | 'tags' | 'tel' | 'tips' | 'toolbox' | 'trash' | 'txtfile' | 'underline' | 'undo' | 'unpin' | 'unselectall' | 'upload' | 'user' | 'variable' | 'video' | 'warning' | 'xlsfile' | 'xlsxfile';\n\n@Component({\n  selector: 'crem-metric',\n  template: `<mat-card class=\"costar-hero-metric-card\">\n\t<mat-card-header>\n\t\t<mat-card-title>{{title}}</mat-card-title>\n\t\t<div class=\"addl-info-wrapper\">\n\t\t\t<i icon=\"icon\"[matMenuTriggerFor]=\"tooltipMenu\"></i>\n\t\t\t<mat-menu #tooltipMenu=\"matMenu\">\n\t\t\t\t<div class=\"hero-tooltip\">\n\t\t\t\t\t{{tooltip}}\n\t\t\t\t</div>\n\t\t\t</mat-menu>\n\t\t</div>\n\t</mat-card-header>\n\t<mat-card-content>\n\t\t<div class=\"hero-value\">\n\t\t\t{{heroMetric}}\n\t\t</div>\n\t\t<div class=\"sidekick-value-wrapper\">\n\t\t\t<div class=\"sidekick-value\" *ngIf=\"sidekickMetricA\">{{sidekickMetricA}}</div>\n\t\t\t<div class=\"sidekick-value\" *ngIf=\"sidekickMetricB\">{{sidekickMetricB}}</div>\n\t\t</div>\n\t</mat-card-content>\n\t<mat-card-footer>\n\t\t<mat-card-subtitle>\n\t\t\t{{subtitle}}\n\t\t</mat-card-subtitle>\n\t</mat-card-footer>\n</mat-card>`,\n  styleUrls: ['./hero-metric.component.scss']\n})\nexport class HeroMetricComponent {\n  @Input() title : string;\n\t@Input() subtitle : string;\n\t@Input() heroMetric : string;\n\t@Input() sidekickMetricA : string;\n\t@Input() sidekickMetricAStyle : string;\n\t@Input() sidekickMetricB : string;\n\t@Input() sidekickMetricBStyle : string;\n\t@Input() tooltip : string;\n  @Input() icon: Icons;\n\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeroMetricComponent } from './hero-metric.component';\nimport {MatCardModule} from '@angular/material/card'\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [CommonModule, BrowserAnimationsModule, MatCardModule, MatMenuModule],\n  declarations: [HeroMetricComponent],\n  exports: [HeroMetricComponent]\n})\n// tslint:disable-next-line: eofline\nexport class HeroMetricModule{}\n"]}