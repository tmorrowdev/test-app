{"version":3,"sources":["ng://crem-lib/src/lib/dxedatagrid/dxedatagrid.service.ts","ng://crem-lib/src/lib/dxedatagrid/dxedatagrid.component.ts","ng://crem-lib/src/lib/dxedatagrid/dxedatagrid.module.ts"],"names":["DxedatagridService","prototype","getDataSource","DataSource","store","type","url","beforeSend","request","params","startDate","endDate","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵproperty","d_r1","value","ctx_r0","customizeTooltip","DxedatagridComponent","service","_this","this","contentReady","e","collapsed","component","expandRow","pointsInfo","text","parseInt","originalValue","dataSource","core","ɵɵdirectiveInject","selectors","inputs","pagesize","decls","vars","consts","template","rf","ctx","i0.ɵɵlistener","$event","i0.ɵɵtemplate","ɵɵpureFunction0","_c0","DatagridModule","providers","imports","CommonModule","DxDataGridModule","DxBulletModule","DxTemplateModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport 'devextreme/data/odata/store';\nimport DataSource from 'devextreme/data/data_source';\n\nexport class DxedatagridService {\n    getDataSource() {\n        return new DataSource({\n            store: {\n                type: 'odata',\n                url: 'https://js.devexpress.com/Demos/SalesViewer/odata/DaySaleDtoes',\n                beforeSend: (request) => {\n                    request.params.startDate = '2018-05-10';\n                    request.params.endDate = '2018-05-15';\n                }\n            }\n        });\n    }\n}\n","import { Component, Pipe, PipeTransform, Input } from '@angular/core';\n\nimport DataSource from 'devextreme/data/data_source';\nimport { DxedatagridService } from './dxedatagrid.service';\n\n\n@Component({\n    selector: 'crem-datagrid',\n    template: `<dx-data-grid id=\"gridContainer\"\n    [dataSource]=\"dataSource\"\n    [remoteOperations]=\"true\"\n    [allowColumnReordering]=\"true\"\n    [rowAlternationEnabled]=\"true\"\n    [showBorders]=\"false\"\n    (onContentReady)=\"contentReady($event)\">\n\n    <dxo-paging [pageSize]=\"pagesize\"></dxo-paging>\n    <dxo-pager\n        [showPageSizeSelector]=\"true\"\n        [allowedPageSizes]=\"[10, 25, 50, 100]\"\n    ></dxo-pager>\n    <dxo-search-panel\n        [visible]=\"true\"\n        [highlightCaseSensitive]=\"true\"\n    ></dxo-search-panel>\n    <dxo-group-panel\n        [visible]=\"true\"\n    ></dxo-group-panel>\n    <dxo-grouping\n        [autoExpandAll]=\"false\"\n    ></dxo-grouping>\n\n    <dxi-column dataField=\"Product\" [groupIndex]=\"0\"></dxi-column>\n    <dxi-column dataField=\"Amount\" caption=\"Sale Amount\" dataType=\"number\" format=\"currency\" alignment=\"left\"></dxi-column>\n    <dxi-column caption=\"Discount %\" dataField=\"Discount\" cellTemplate=\"discountCellTemplate\" dataType=\"number\" format=\"percent\" alignment=\"left\" [allowGrouping]=\"false\" cssClass=\"bullet\"></dxi-column>\n    <dxi-column dataField=\"SaleDate\" dataType=\"date\"></dxi-column>\n    <dxi-column dataField=\"Region\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Sector\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Channel\" dataType=\"string\"></dxi-column>\n    <dxi-column dataField=\"Customer\" dataType=\"string\"></dxi-column>\n\n    <div *dxTemplate=\"let d of 'discountCellTemplate'\">\n          <div class=\"chart-cell\">\n              <dx-bullet\n                  [showTarget]=\"false\"\n                  [showZeroLevel]=\"true\"\n                  [startScaleValue]=\"0\"\n                  [endScaleValue]=\"100\"\n                  [value]=\"d.value * 100\">\n                  <dxo-size [width]=\"150\" [height]=\"35\"></dxo-size>\n                  <dxo-tooltip\n                      [enabled]=\"true\"\n                      [paddingTopBottom]=\"2\"\n                      [customizeTooltip]=\"customizeTooltip\">\n                      <dxo-font [size]=\"18\"></dxo-font>\n                  </dxo-tooltip>\n                  <dxo-margin\n                      [top]=\"5\"\n                      [bottom]=\"0\"\n                      [left]=\"5\"\n                  ></dxo-margin>\n              </dx-bullet>\n          </div>\n      </div>\n</dx-data-grid>`,\n    styleUrls: ['dxedatagrid.component.scss']\n})\nexport class DxedatagridComponent {\n  @Input() dataSource: DataSource;\n  @Input() collapsed : boolean;\n  @Input() pagesize: number;\n    contentReady = (e) => {\n        if(!this.collapsed) {\n            this.collapsed = true;\n            e.component.expandRow(['EnviroCare']);\n        }\n    };\n    customizeTooltip = (pointsInfo) => {\n        return { text: parseInt('', pointsInfo.originalValue) + '%' };\n    }\n\n    constructor(service: DxedatagridService) {\n        this.dataSource = service.getDataSource();\n    }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DxedatagridComponent } from './dxedatagrid.component';\nimport { DxedatagridService } from './dxedatagrid.service';\nimport { DxDataGridModule} from 'devextreme-angular/ui/data-grid';\nimport {DxBulletModule} from 'devextreme-angular/ui/bullet';\nimport {DxTemplateModule} from 'devextreme-angular/core';\n\n@NgModule({\n  imports: [CommonModule, DxDataGridModule, DxBulletModule, DxTemplateModule],\n  declarations: [DxedatagridComponent],\n  exports: [DxedatagridComponent],\n  providers: [DxedatagridService]\n})\n// tslint:disable-next-line: eofline\nexport class DatagridModule{}\n"]}