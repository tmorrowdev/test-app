{"version":3,"file":"costar-crem-lib-src-lib-hero-metric.js","sources":["ng://@costar/crem-lib/src/lib/hero-metric/hero-metric.component.ts","ng://@costar/crem-lib/src/lib/hero-metric/hero-metric.module.ts"],"sourcesContent":["import { Component, Input, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nexport type SidekickColor = 'red' | 'green' | 'gray';\n/**\n *\n */\n@Component({\n  selector: 'crem-metric',\n  template: `<mat-card class=\"costar-hero-metric-card\">\n\t<mat-card-header>\n\t\t<mat-card-title>{{title}}</mat-card-title>\n\t\t<div class=\"addl-info-wrapper\">\n      <button mat-icon-button class=\"infobutton\" color=\"#0559B3\" [matMenuTriggerFor]=\"tooltipMenu\">\n        <mat-icon>info</mat-icon>\n      </button>\n\t\t\t<mat-menu #tooltipMenu=\"matMenu\" [overlapTrigger]=\"true\">\n\t\t\t\t<button mat-menu-item class=\"hero-tooltip\">\n\t\t\t\t\t{{tooltip}}\n        </button>\n\t\t\t</mat-menu>\n\t\t</div>\n\t</mat-card-header>\n\t<mat-card-content>\n\t\t<div class=\"hero-value\">\n\t\t\t{{heroMetric}}\n\t\t</div>\n\t\t<div class=\"sidekick-value-wrapper\" *ngIf=\"sidekickMetric\">\n\t\t\t<div class=\"sidekick-value\" [ngClass]=\"sidekickColor\" >{{sidekickMetric}}</div>\n\t\t\t<!-- <div class=\"sidekick-value\" *ngIf=\"sidekickMetricB\">{{sidekickMetricB}}</div> -->\n\t\t</div>\n\t</mat-card-content>\n\t<mat-card-footer>\n\t\t<mat-card-subtitle>\n\t\t\t{{subtitle}}\n\t\t</mat-card-subtitle>\n\t</mat-card-footer>\n</mat-card>`,\nstyleUrls: ['hero-metric.component.scss']\n})\nexport class HeroMetricComponent {\n  @Input() title: string;\n  @Input() subtitle: string;\n  @Input() heroMetric: string;\n  @Input() sidekickMetric: string;\n  @Input() sidekickColor: SidekickColor;\n  @Input() tooltip: string;\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon('info',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/images/info.svg'));\n}\n\n}\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeroMetricComponent} from './hero-metric.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n@NgModule({\n  imports: [CommonModule, BrowserAnimationsModule, HttpClientModule, MatButtonModule, MatIconModule, MatCardModule, MatMenuModule],\n  declarations: [HeroMetricComponent],\n  exports: [HeroMetricComponent]\n})\nexport class HeroMetricModule { }\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAkDE,6BAAY,YAA6B,EAAE,SAAuB;QAChE,YAAY,CAAC,UAAU,CAAC,MAAM,EAC5B,SAAS,CAAC,8BAA8B,CAAC,wBAAwB,CAAC,CAAC,CAAC;KACzE;;gBA5CA,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,ghCA4BA;;iBAEX;;;;gBAvCQ,eAAe;gBADf,YAAY;;;wBA0ClB,KAAK;2BACL,KAAK;6BACL,KAAK;iCACL,KAAK;gCACL,KAAK;0BACL,KAAK;;IAOR,0BAAC;CA9CD,IA8CC;;;IAZC,oCAAuB;;IACvB,uCAA0B;;IAC1B,yCAA4B;;IAC5B,6CAAgC;;IAChC,4CAAsC;;IACtC,sCAAyB;;;;;;;;;ICrC3B;KAKiC;;gBALhC,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,uBAAuB,EAAE,gBAAgB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;oBAChI,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B;;IAC+B,uBAAC;CALjC;;;;;;;;;;;;;;;;;;;;;;"}