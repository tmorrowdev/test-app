{"version":3,"sources":["ng://@costar/crem-lib/src/lib/hero-metric/hero-metric.component.ts","ng://@costar/crem-lib/src/lib/hero-metric/hero-metric.module.ts"],"names":["HeroMetricComponent","iconRegistry","sanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","Component","args","selector","template","MatIconRegistry","DomSanitizer","Input","HeroMetricModule","NgModule","imports","CommonModule","BrowserAnimationsModule","HttpClientModule","MatButtonModule","MatIconModule","MatCardModule","MatMenuModule","declarations","exports"],"mappings":"0qCAkDE,SAAAA,EAAYC,EAA+BC,GACzCD,EAAaE,WAAW,OACtBD,EAAUE,+BAA+B,2BAG/C,2BA9CCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAU,smoDATHC,EAAAA,uBADAC,EAAAA,+CA0CNC,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,8BACAA,EAAAA,6BACAA,EAAAA,uBACAA,EAAAA,SAOHX,sBC5CA,SAAAY,KAKgC,2BAL/BC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CAACC,EAAAA,aAAcC,EAAAA,wBAAyBC,EAAAA,iBAAkBC,EAAAA,gBAAiBC,EAAAA,cAAeC,EAAAA,cAAeC,EAAAA,eAClHC,aAAc,CAACtB,GACfuB,QAAS,CAACvB,OAEoBY","sourcesContent":["import { Component, Input, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nexport type SidekickColor = 'red' | 'green' | 'gray';\n/**\n *\n */\n@Component({\n  selector: 'crem-metric',\n  template: `<mat-card class=\"costar-hero-metric-card\">\n\t<mat-card-header>\n\t\t<mat-card-title>{{title}}</mat-card-title>\n\t\t<div class=\"addl-info-wrapper\">\n      <button mat-icon-button class=\"infobutton\" color=\"#0559B3\" [matMenuTriggerFor]=\"tooltipMenu\">\n        <mat-icon>info</mat-icon>\n      </button>\n\t\t\t<mat-menu #tooltipMenu=\"matMenu\" [overlapTrigger]=\"true\">\n\t\t\t\t<button mat-menu-item class=\"hero-tooltip\">\n\t\t\t\t\t{{tooltip}}\n        </button>\n\t\t\t</mat-menu>\n\t\t</div>\n\t</mat-card-header>\n\t<mat-card-content>\n\t\t<div class=\"hero-value\">\n\t\t\t{{heroMetric}}\n\t\t</div>\n\t\t<div class=\"sidekick-value-wrapper\" *ngIf=\"sidekickMetric\">\n\t\t\t<div class=\"sidekick-value\" [ngClass]=\"sidekickColor\" >{{sidekickMetric}}</div>\n\t\t\t<!-- <div class=\"sidekick-value\" *ngIf=\"sidekickMetricB\">{{sidekickMetricB}}</div> -->\n\t\t</div>\n\t</mat-card-content>\n\t<mat-card-footer>\n\t\t<mat-card-subtitle>\n\t\t\t{{subtitle}}\n\t\t</mat-card-subtitle>\n\t</mat-card-footer>\n</mat-card>`,\nstyleUrls: ['hero-metric.component.scss']\n})\nexport class HeroMetricComponent {\n  @Input() title: string;\n  @Input() subtitle: string;\n  @Input() heroMetric: string;\n  @Input() sidekickMetric: string;\n  @Input() sidekickColor: SidekickColor;\n  @Input() tooltip: string;\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon('info',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/images/info.svg'));\n}\n\n}\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeroMetricComponent} from './hero-metric.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n@NgModule({\n  imports: [CommonModule, BrowserAnimationsModule, HttpClientModule, MatButtonModule, MatIconModule, MatCardModule, MatMenuModule],\n  declarations: [HeroMetricComponent],\n  exports: [HeroMetricComponent]\n})\nexport class HeroMetricModule { }\n\n"]}